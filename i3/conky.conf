# Source: https://github.com/mgarratt/i3wm-conky/blob/master/i3/conky.conf

### Conky configuration file
## Output is printed to the console -> i3bar

## No output to X <yes/no>
out_to_x no

## Create own window to draw <yes/no>
own_window no

## Print everything to console?
out_to_console yes

## Use double buffering (reduces flicker, not needed for console output)
double_buffer no

## Set to yes if you want Conky to be forked in the background
background no

## Update interval in seconds
update_interval 1.0

## This is the number of times Conky will update before quitting.
## Set to zero to run forever.
total_run_times 0

## Shortens units to a single character (kiB->k, GiB->G, etc.). Default is off.
short_units yes

## How strict should if_up be when testing an interface for being up?
## The value is one of up, link or address, to check for the interface
## being solely up, being up and having link or being up, having link
## and an assigned IP address.
if_up_strictness link

## Add spaces to keep things from moving about?  This only affects certain objects.
## use_spacer should have an argument of left, right, or none
use_spacer right

## Force UTF8? note that UTF8 support required XFT
override_utf8_locale no

## number of cpu samples to average
## set to 1 to disable averaging
cpu_avg_samples 2

pad_percents 2

# Icons: ⛁ (white draughts king > disk)

# Possible variables to be used: http://conky.sourceforge.net/conkyrc-vert

## Stuff after 'TEXT' will be formatted on screen
TEXT

# JSON for i3bar
[
#	${if_match ${exec docker ps | wc -l}>1}
#	{ "full_text": " ⚓ ${exec /home/mauvm/.dotfiles/tools/docker-containers} " },
#	${endif}
	${if_up eth0}
	{ "full_text": " E ${if_up eth0}${addr eth0}${else}-${endif} " },
#	{ "full_text": " ↓ ${downspeed eth0}/s " },
#	{ "full_text": " ↑ ${upspeed eth0}/s " },
#	{ "full_text": " Σ↓ ${totaldown eth0} " },
#	{ "full_text": " Σ↑ ${totalup eth0} " },
	${endif}
	${if_up wlp3s0}
	{ "full_text": " W ${if_up wlp3s0}${exec /home/mauvm/.dotfiles/tools/wifi-name} ${addr wlp3s0}${else}-${endif} " },
#	{ "full_text": " ↓ ${downspeed wlp3s0}/s " },
#	{ "full_text": " ↑ ${upspeed wlp3s0}/s " },
#	{ "full_text": " Σ↓ ${totaldown wlp3s0} " },
#	{ "full_text": " Σ↑ ${totalup wlp3s0} " },
	${endif}
	${if_match ${cpu cpu0}>80}
	{ "full_text": " CPU: ${cpu cpu0}% ", "color": "\#FF0000" },
	${endif}
	${if_match ${memperc}>80}
	{ "full_text": " RAM: ${memperc}% ", "color": "\#FF0000" },
	${endif}
	${if_match ${battery_percent}<30}
	{ "full_text": " ⚡ ${battery_percent BAT0}% ", "color": "\#FF0000" },
	${endif}
	${if_match ${battery_percent}>=30}${if_match ${battery_percent}<90}
	{ "full_text": " ⚡ ${battery_percent BAT0}% " },
	${endif}${endif}
	${if_match "${exec volume muted && echo 'y'}"=="y"}
	{ "full_text": " ♪ MUTE " },
	${else}
	{ "full_text": " ♪ ${exec volume} " },
	${endif}
	{ "full_text": " ${time %m-%d} ${time %H:%M:%S} " }
],

